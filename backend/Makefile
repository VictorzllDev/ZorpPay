# Configura√ß√µes
APP_NAME      := ZorpPay
BINARY_DIR    := bin
SWAGGER_DIR   := docs
MAIN_PATH     := cmd/api/main.go
VERSION       := 0.5.0
GOFLAGS       := -ldflags="-s -w -X main.version=$(VERSION)"

# Cores (compat√≠veis com Kitty)
RED    := $$(printf '\033[31m')
GREEN  := $$(printf '\033[32m')
YELLOW := $$(printf '\033[33m')
RESET  := $$(printf '\033[0m')

.PHONY: dev run build swagger deps test lint clean help

## dev: Inicia a API em modo desenvolvimento (com Swagger)
dev: swagger
	@printf "${GREEN}üåç Iniciando API em modo desenvolvimento...${RESET}\n"
	@go run $(GOFLAGS) $(MAIN_PATH)

## run: Inicia a API sem gerar documenta√ß√£o
run:
	@printf "${GREEN}üåç Iniciando API...${RESET}\n"
	@go run $(MAIN_PATH)

## build: Compila o bin√°rio da API
build:
	@printf "${GREEN}üî® Compilando ${APP_NAME} v${VERSION}...${RESET}\n"
	@go build $(GOFLAGS) -o $(BINARY_DIR)/$(APP_NAME) $(MAIN_PATH)

## swagger: Gera/atualiza documenta√ß√£o Swagger
swagger:
	@if ! command -v swag &> /dev/null; then \
		printf "${RED}‚ùå 'swag' n√£o instalado.${RESET}"; \
		exit 1; \
	fi
	@printf "${GREEN}üìù Gerando documenta√ß√£o Swagger...${RESET}\n"
	@swag init -g $(MAIN_PATH) -o $(SWAGGER_DIR)
	@printf "${GREEN}‚úÖ Documenta√ß√£o gerada em: ${SWAGGER_DIR}/${RESET}\n"

## deps: Instala/atualiza depend√™ncias
deps:
	@printf "${GREEN}üì¶ Gerenciando depend√™ncias...${RESET}\n"
	@go mod tidy
	@go mod download

## lint: Executa an√°lise est√°tica do c√≥digo
lint:
	@printf "${GREEN}üîç Verificando qualidade do c√≥digo...${RESET}\n"
	@if ! command -v golangci-lint &> /dev/null; then \
		printf "${RED}‚ùå 'golangci-lint' n√£o instalado.${RESET}"; \
		exit 1; \
	fi
	@golangci-lint run ./...

## clean: Remove arquivos gerados
clean:
	@printf "${GREEN}üßπ Limpando artefatos...${RESET}\n"
	@rm -rf $(BINARY_DIR) $(SWAGGER_DIR)
	@go clean

## help: Mostra esta ajuda
help:
	@printf "${YELLOW}\nüìñ Comandos dispon√≠veis para ${APP_NAME}:${RESET}\n"
	@printf "${GREEN}dev${RESET}: Inicia a API em modo desenvolvimento (com Swagger)\n"
	@printf "${GREEN}run${RESET}: Inicia a API sem gerar documenta√ß√£o\n"
	@printf "${GREEN}build${RESET}: Compila o bin√°rio da API\n"
	@printf "${GREEN}swagger${RESET}: Gera/atualiza documenta√ß√£o Swagger\n"
	@printf "${GREEN}deps${RESET}: Instala/atualiza depend√™ncias\n"
	@printf "${GREEN}lint${RESET}: Executa an√°lise est√°tica do c√≥digo\n"
	@printf "${GREEN}clean${RESET}: Remove arquivos gerados\n"
	@printf "${GREEN}help${RESET}: Mostra esta ajuda\n"

.DEFAULT_GOAL := help
